#!/bin/sh /etc/rc.common
# look at /lib/functions/services.sh on a running system for explanations of what other options you can use
START=50
STOP=89

APP=ok_capwapc

SERVICE_DAEMONIZE=1
#SERVICE_WRITE_PID=1
#SERVICE_USE_PID=1
SERVICE_STOP_TIME=3


CONFIG_FILE="/etc/capwapc/config.wtp"

. /lib/functions.sh

buffer=""

config_cb() {
    local type="$1"
    local name="$2"
    if [ "$name" == "server" ]
    then
        append buffer "<AC_ADDRESSES>\n"
        option_cb() {
            local name="$1"
            local value="$2"
            append buffer "</AC_ADDRESSES>$value\n"
        }
    elif [ "$name" == "wtp" ]
    then
        append buffer "<end>\n"
        option_cb() {
            local name="$1"
            local value="$2"
            case "$name" in
                "location")
                append buffer "</WTP_LOCATION>$value\n"
                ;;
                "ctrl_port")
                append buffer "</WTP_CTRL_PORT>$value\n"
                ;;
                "mtu")
                append buffer "</WTP_FORCE_MTU>$value\n"
                ;;
                "disc_intv")
                append buffer "</WTP_DISC_INTV>$value\n"
                ;;
                "maxdisc_intv")
                append buffer "</WTP_MAXDISC_INTV>$value\n"
                ;;
                "echo_intv")
                append buffer "</WTP_ECHO_INTV>$value\n"
                ;;
                "retran_intv")
                append buffer "</WTP_RETRAN_INTV>$value\n"
                ;;
                "silent_intv")
                append buffer "</WTP_SILENT_INTV>$value\n"
                ;;
                "join_timeout")
                append buffer "</WTP_JOIN_TIMEOUT>$value\n"
                ;;
                "max_disces")
                append buffer "</WTP_MAX_DISCES>$value\n"
                ;;
                "max_retran")
                append buffer "</WTP_MAX_TRANS>$value\n"
                append buffer "<end>\n"
                ;;
                "domain")
                ;;
                *)
                echo "error: not support"
                ;;
            esac
                
        }
    else
        option_cb() {
            local name="$1"
            local value="$2"
        }
    fi
}


generate_config () {
    config_load capwapc
    echo -e $buffer > $CONFIG_FILE
    sed -i 's/^ //g' $CONFIG_FILE
}

start() {
    stop
    generate_config
    ulimit -c unlimited
    service_start /bin/nice -n -18 /usr/sbin/$APP
}


stop() {
    service_stop /usr/sbin/$APP
}

restart() {
    start
}

