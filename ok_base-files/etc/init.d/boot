#!/bin/sh /etc/rc.common
# Copyright (C) 2006-2011 OpenWrt.org

START=10
STOP=98

uci_apply_defaults() {
	. /lib/functions/system.sh

	cd /etc/uci-defaults || return 0
	files="$(ls)"
	[ -z "$files" ] && return 0
	mkdir -p /tmp/.uci
	for file in $files; do
		( . "./$(basename $file)" ) && rm -f "$file"
	done
	uci commit
}

boot() {
    mount -t ubi /dev/ubi0_1 /overlay
	[ -f /proc/mounts ] || /sbin/mount_root
	[ -f /proc/jffs2_bbc ] && echo "S" > /proc/jffs2_bbc
	[ -f /proc/net/vlan/config ] && vconfig set_name_type DEV_PLUS_VID_NO_PAD

	mkdir -p /var/run
	mkdir -p /var/log
	mkdir -p /var/lock
	mkdir -p /var/state
	mkdir -p /var/tmp
	mkdir -p /tmp/.uci
	chmod 0700 /tmp/.uci
	touch /var/log/wtmp
	touch /var/log/lastlog
	touch /tmp/resolv.conf.auto
	ln -sf /tmp/resolv.conf.auto /tmp/resolv.conf
	grep -q debugfs /proc/filesystems && /bin/mount -o noatime -t debugfs debugfs /sys/kernel/debug
	[ "$FAILSAFE" = "true" ] && touch /tmp/.failsafe

	/sbin/kmodloader

	[ ! -f /etc/config/wireless ] && {
		# compat for brcm47xx and mvebu
		sleep 1
	}

	/bin/config_generate
	uci_apply_defaults
    # OK_PATCH
    # generate productinfo
    /lib/okos/okos_init.sh
    /lib/okos/fetch_productinfo.sh > /etc/config/productinfo
    mac=`uci get productinfo.productinfo.mac|tr -d :|tr '[a-z]' '[A-Z]'`
    uci set system.@system[0].hostname="$mac";uci set system.@system[0].log_prefix="$mac";uci commit system
    echo "$mac" > /proc/sys/kernel/hostname
    ipset -N gfwlist iphash -!
    [ "`uci get productinfo.productinfo.production`" = "EdgeRouter_ER-X" ] && {
        [ -d /sys/class/gpio ] && {
            echo 0 > /sys/class/gpio/export
            echo out > /sys/class/gpio/gpio0/direction
            echo 1 > /sys/class/gpio/gpio0/value
        }
    }
    [ -f /overlay/upper/etc/config/capwapc ] && cp -f /overlay/upper/etc/config/capwapc /etc/config/capwapc
    #[ -f /overlay/upper/etc/config/network ] && cp -f /overlay/upper/etc/config/network /etc/config/network
    # [ -f /overlay/upper/etc/config/dhcp ] && cp -f /overlay/upper/etc/config/dhcp /etc/config/dhcp
    [ -f /overlay/upper/etc/shadow ] && cp -f /overlay/upper/etc/shadow /etc/shadow
    # end OK_PATCH
	
	# temporary hack until configd exists
	/sbin/reload_config
}
