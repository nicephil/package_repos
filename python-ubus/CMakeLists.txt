cmake_minimum_required(VERSION 3.0)

SET(CURRENT_SOURCE_DIR "${CMAKE_CURRENT_SOURCE_DIR}")
SET(SETUP_PY_IN "${CMAKE_CURRENT_SOURCE_DIR}/setup.py.in")
SET(SETUP_PY "${CMAKE_CURRENT_BINARY_DIR}/setup.py")

IF(NOT PYTHON_CFLAGS)
	FIND_PROGRAM(PKG_CONFIG pkg-config)
	IF(PKG_CONFIG)
		EXECUTE_PROCESS(
			COMMAND pkg-config --silence-errors --cflags python2
			OUTPUT_VARIABLE PYTHON_CFLAGS
			OUTPUT_STRIP_TRAILING_WHITESPACE
		)
	ENDIF()
ENDIF()

IF(NOT PYTHON)
	FIND_PROGRAM(PYTHON python)
ENDIF()

SET(PYTHON_CFLAGS "-Os -Wall -Werror --std=gnu99 -g3 -fno-strict-aliasing -I.. ${PYTHON_CFLAGS}")
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/..)
LINK_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/..)

IF(APPLE)
	SET(CMAKE_SHARED_MODULE_CREATE_C_FLAGS "${CMAKE_SHARED_MODULE_CREATE_C_FLAGS} -undefined dynamic_lookup")
ENDIF(APPLE)

SET(PYTHONPATH "/home/llwang/repos/x86/osdk_repos/staging_dir/target-i386_pentium4_musl-1.1.16/usr/lib/python2.7/")
IF(NOT PYTHONPATH)
	EXECUTE_PROCESS(
		COMMAND ${PYTHON} -c "import os; print os.path.dirname(os.__file__)"
		OUTPUT_VARIABLE PYTHONPATH
		RESULT_VARIABLE PYTHON_CHECK_RES
		OUTPUT_STRIP_TRAILING_WHITESPACE
	)

	IF(NOT ${PYTHON_CHECK_RES} EQUAL 0 OR "${PYTHONPATH}" EQUAL "")
		MESSAGE(SEND_ERROR "Python was not found on your system")
	ENDIF()
ENDIF()

CONFIGURE_FILE(${SETUP_PY_IN} ${SETUP_PY})


SET(PYTHON_CFLAGS "${PYTHON_CFLAGS} -DUBUS_UNIX_SOCKET=\\\\\\\"${UBUS_UNIX_SOCKET}\\\\\\\"")
SET_PROPERTY(DIRECTORY APPEND PROPERTY ADDITIONAL_MAKE_CLEAN_FILES "build")

SET(LDSHARED "${CMAKE_C_COMPILER} ${CMAKE_C_COMPILER_ARG1} -shared")

ADD_CUSTOM_TARGET(python ALL
	COMMAND ${CMAKE_COMMAND} -E env "CC=${CMAKE_C_COMPILER} ${CMAKE_C_COMPILER_ARG1}" "LDSHARED=${LDSHARED}" "CFLAGS=${PYTHON_CFLAGS}" ${PYTHON} ${SETUP_PY} build
	DEPENDS ubus "${CURRENT_SOURCE_DIR}/ubus_python.c"
)

INSTALL(
	CODE "execute_process(COMMAND ${CMAKE_COMMAND} -E env \"CC=${CMAKE_C_COMPILER} ${CMAKE_C_COMPILER_ARG1}\" \"LDSHARED=${LDSHARED}\" \"CFLAGS=${PYTHON_CFLAGS}\" ${PYTHON} ${SETUP_PY} install --prefix=${CMAKE_INSTALL_PREFIX})"
)
